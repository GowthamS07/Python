import webbrowser as wb
wb.open('https:\\news.google.co.in')

import webbrowser as wb, sys, pyperclip
# Check if command line arguments were passed
if len (sys.argv)>1:
    address = ' '.join(sys.argv[1:])
else:
    address = pyperclip.paste()
    
wb.open(r'https://www.google.com/maps/place/'+address)

##########################################################################################################################
########################### Downloading from the web with the requests module

#The requests module is a 3rd-party module for downloading web pages and files.
import requests
res = requests.get(r'https://automatetheboringstuff.com/files/rj.txt') #requests.get() returns a Response object.
res.status_code #Code = 200 means everything is ok.
len(res.text) #res.text: Downloads the page content
print(res.text[:500]) 
res.raise_for_status() #gives error if download fails, else nothing on successful
readFile = open('RomeoAndJuliet.txt','wb')
for chunk in res.iter_content(100000): #You can save a downloaded file to our hard drive with calls to the iter_content() method.
    readFile.write(chunk)
readFile.close()

badRes = requests.get(r'https://automatetheboringstuff.com/hjgfjyhgkjg')
badRes.raise_for_status() #output: HTTPError: 404 Client Error:
playFile = open('LailaMajnu.txt','wb')


#######################################################################################################################
########################### Parsing HTML with the Beautiful Soup Module....
#Web pages are plain text files, formatted as HTML.
#HTML can be passed with the BeautifulSoup module.
#3rd party BeautifulSoup module is imported with the name bs4.
# Pass the string with the HTML to the bs4.BeautifulSoup() function to get a Soup object.
# The Soup object has a select() method that can be passed a string of the CSS selector for an HTML tag.
# We can get a CSS selector string from the browser's developer tools by right-clicking the element & selecting Copy CSS Path.
# The select() method will return a list of matching Element objects.

import bs4
import requests
res = requests.get('http://www.amazon.com/Automate-Boring-Python-Albert-Sweigart/dp/1593275994/ref=sr_1_1?s=books&ie=UTF8&qid=1536291470&sr=1-1&keywords=automate+the+boring+stuff+with+python')
res.raise_for_status()
soup = bs4.BeautifulSoup(res.text)
soup = bs4.BeautifulSoup(res.text,'html.parser')
soup = bs4.BeautifulSoup(res.text,"lxml")
soup.select('#usedOfferAccordionRow > div > div.a-accordion-row-a11y > a > h5 > div > div.a-column.a-span4.a-text-right.a-span-last > span.a-size-medium.a-color-price.header-price')
elements = soup.select('#usedOfferAccordionRow > div > div.a-accordion-row-a11y > a > h5 > div > div.a-column.a-span4.a-text-right.a-span-last > span.a-size-medium.a-color-price.header-price')
elements[0].text
elements[0].text.strip()
